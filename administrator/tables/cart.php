<?php
/**
 * @package     Joomla.Administrator
 * @subpackage  com_catalogue
 *
 * @copyright   Copyright (C) 2012 - 2016 Saity74, LLC. All rights reserved.
 * @license     GNU General Public License version 2 or later; see LICENSE.txt
 */
defined('_JEXEC') or die;

require_once __DIR__ . '/observer/cart.php';

JObserverMapper::addObserverClassToClass('CatalogueTableCartObserver', 'CatalogueTableCart', array());

/**
 * CatalogueTableCart class
 *
 * @since  11.1
 */
class CatalogueTableCart extends JTable
{

	protected $_jsonEncode = ['items', 'attribs'];

	public $items;

	public $attribs;

	/**
	 * Object constructor to set table and key fields.  In most cases this will
	 * be overridden by child classes to explicitly set the table and key fields
	 * for a particular database table.
	 *
	 * @param   JDatabaseDriver  &$_db  JDatabaseDriver object.
	 *
	 * @since   11.1
	 */
	public function __construct(&$_db)
	{

		/** @noinspection PhpParamsInspection */
		parent::__construct('#__catalogue_cart', 'id', $_db);
	}


	/**
	 * Method to bind an associative array or object to the JTable instance.This
	 * method only binds properties that are publicly accessible and optionally
	 * takes an array of properties to ignore when binding.
	 *
	 * @param   mixed  $array   An associative array or object to bind to the JTable instance.
	 * @param   mixed  $ignore  An optional array or space separated list of properties to ignore while binding.
	 *
	 * @return  boolean  True on success.
	 *
	 * @link    https://docs.joomla.org/JTable/bind
	 * @since   3.2
	 * @throws  UnexpectedValueException
	 */

	public function store($updateNulls = false)
	{


		//var_dump($this->items); die();
		$date = JFactory::getDate();
		$user = JFactory::getUser();

		if ($this->id) {
			// Existing item
			$this->modified = $date->toSql();
			$this->modified_by = $user->get('id');

		} else {
			// New item. A item created and created_by field can be set by the user,
			// so we don't touch either of these if they are set.
			if (!(int)$this->created) {
				$this->created = $date->toSql();
			}
			if (empty($this->created_by)) {
				$this->created_by = $user->get('id');
			}
		}

		return parent::store($updateNulls); // TODO: Change the autogenerated stub
	}


}
